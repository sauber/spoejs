%# Generate a code and image for human test
%#
%# License: Artistic License
%#          http://www.opensource.org/licenses/artistic-license.php
%#
%# $Id: humantest,v 1.1 2004/06/04 08:26:03 sauber Exp $
%#
<%once>
use Authen::Captcha;

# Check if storage dir exists
unless ( -d '/tmp/captcha' ) {
  system 'mkdir /tmp/captcha';
}

# Create a secret for this system
my $secret = `uname -a`;

# Create a permanent Authen::Captcha object
my $AC = new Authen::Captcha(
  data_folder => '/tmp/captcha',
  output_folder => '/tmp/captcha',
  secret => $secret,
  debug => 1,
);
</%once>
<%method challenge>
<%perl>
# Do we already who it is?
return if exists $session{humanname};

# Generate security image and code unless already exists
unless ( exists $session{humantest}
         and -f "/tmp/captcha/$session{humantest}.png" ) {
  $session{humantest} = $AC->generate_code(5);
}
</%perl>
</%method>
<%method response>
<%perl>
my($code,$md5sum,$name,$email) = @_;
my $result = $AC->check_code($code,$md5sum);
         # $result will be one of:
         #          1 : Passed
         #          0 : Code not checked (file error)
         #         -1 : Failed: code expired
         #         -2 : Failed: invalid code (not in database)
         #         -3 : Failed: invalid code (code does not match crypt)
         ##############
warn "code=$code md5sum=$md5sum result=$result email=$email";
if ( $result == 1 ) {
  $session{humanname} = $name;
  $session{humanemail} = $email if $email;
} else {
  # XXX: throw an error
  # XXX: if code expired render a new challenge
}
</%perl>
</%method>
<%init>
</%init>
<%args>
</%args>
