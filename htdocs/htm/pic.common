<%doc>
Common rendering functionality

License: Artistic License
         http://www.opensource.org/licenses/artistic-license.php

$Id: pic.common,v 1.7 2006/08/27 14:13:50 sauber Exp $
</%doc>
<% $$m_ref %>\
% $m->abort();
<%init>
    my $path = "$spoejs{channel_path}/$spoejs{p}{d}";

    my $M;
    if ( $spoejs{p}{p} eq 'ANY' ) {
       my $ML = Spoejs::MediaList->new( path => $path );
       $M = $ML->get( 'random' );
    } else {
       $M = Spoejs::Media->new( path => $path, file => $spoejs{p}{p} );
    }
    my $m_ref = $M->get( size => $spoejs{p}{m}, quality => $spoejs{p}{q} );

    # Determine content-type
    $spoejs{p}{p} =~ /\.(.*?)$/ and my $ext = lc $1;
    my $ct;
    for ($ext) {
      /gif/          and $ct = "image/gif",       next;
      /bmp/          and $ct = "image/bmp",       next;
      /png/          and $ct = "image/png",       next;
      # Thumbnails for movies is actually in jpeg format
      #/jpeg|jpg/     and $ct = "image/jpeg",      next;
      #/mpeg|mpe|mpg/ and $ct = "video/mpeg",      next;
      #/mov|qt/       and $ct = "video/quicktime", next;
      #/avi/          and $ct = "video/x-msvideo", next;
      # Pretend that anything else is jpeg format
      $ct = "image/jpeg";
    }

    # Make sure we only send out jpeg data
    $m->clear_buffer();
    $r->content_type( $ct );

    # Caching
    my $offset = 60 * 60 * 24 * 60; # seconds * minutes * hours * days
    my $e = gmtime( time + $offset );
    my $l = gmtime( time - $offset * 10 );
    $r->headers_out->add( "Expires" => $e );
    $r->headers_out->add( "Last-Modified" => $l );

    # Update access statistics when thumb is specified as ANY
    $spoejs{Stats}->access( $M->{file} ) if $spoejs{p}{p} eq 'ANY'
                                        and defined $spoejs{Stats};
</%init>
