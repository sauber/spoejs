<%doc>
generate data for abstract

License: Artistic License
         http://www.opensource.org/licenses/artistic-license.php

$Id: abstract.sub,v 1.13 2006/07/07 17:12:56 sauber Exp $
</%doc>
<& $w,
   title      => $storyref->get( 'title' ),
   author     => $storyref->get( 'author' ),
   category   => $storyref->get( 'category' ),
   date       => $storyref->get( 'date' ),
   abstract   => $storyref->get( 'abstract' ),
   icon_size  => 105,
   story_href => $story_href,
   path       => $path,
   edit_href  => $edit_href,
   thumb_file => $thumb_fn,
   views      => $views,
   num_media  => $storyref->{ML}->count(),
   comments   => $num_comments,
&>
<%init>
my $author = $storyref->get( 'author' );
my $path = $storyref->story_path_from_full();
my $story_href = $m->scomp( '/htm/url:encode',
			    "/$spoejs{channel}/story.html",
			    d => $path
			  );
my $edit_href; 
if ( $session{chanauth} && $spoejs{channel} && 
     $session{chanauth}{$spoejs{channel}}) {
  $edit_href = $m->scomp( '/htm/url:encode',
			  "/$spoejs{channel}/admin/story.html", d => $path );
}

# Thumbnail
my $thumb_fn;
if ( $storyref->{ML}->get() ) {

  my $type = $storyref->get( 'thumbnail' );

  # Get default from channelconf
  if ( !$type or $type eq 'default' ) {
    $type = $spoejs{ChannelConf}->get( 'thumbnail' );
  }

  my $img  = $storyref->{ML}->get( $type );
  $thumb_fn = $type eq 'random' ? 'ANY' : $img->{file};
}

# Access stats:
my($views);
my $stat = new Spoejs::Stats( path => $storyref->{path} );
($views) = $stat->stats( 'story' );

# Number of comments for story, including pics
my $C = new Spoejs::Comments( path => $storyref->{path} );
my $commentsdata = $C->get( );
# After data is load from file, then parse it into a list of hashes
my @comments = map {{ /^(\w+?)\s*=\s*(.+?)$/gm }}
               split /\r\n\r\n|\n\r\n\r|\n\n|\r\r/, $commentsdata;
my $num_comments = scalar @comments;

</%init>
<%args>
 $storyref => undef
 $w        => undef
</%args>
