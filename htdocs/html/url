% # This module encodes and decodes url's
% # $Id: url,v 1.2 2004/03/24 00:51:24 snicki Exp $
% # Encode and decode url

<%method encode>
<%perl>
  my($link,%options) = @_;
my @b = qw( a b c d e f g h i j k l m n o p q r s t u v x y z A B C D E F G H I J K L M N O P Q R S T U V X Y Z 0 1 2 3 4 5 6 7 8 9 );
push @b, '.';
  my $BS = new Bootstring( BASIC => \@b );

  my($r,$k,$v);
  while ( ($k,$v) = each %options ) {
    my $new_v = $BS->encode($v);
    $r .= "_$k${new_v}";
  }
  $link =~ s/(.*)\.(.*?)/$1$r.$2/;
</%perl>
<% $link %>\
</%method>

<%method decode>
<%perl>
  my($link) = @_;
my @b = qw( a b c d e f g h i j k l m n o p q r s t u v x y z A B C D E F G H I J K L M N O P Q R S T U V X Y Z 0 1 2 3 4 5 6 7 8 9 );
push @b, '.';

  my $BS = new Bootstring( BASIC => \@b );

  my %O;
  while ( $link =~ s/(_)(.)(.*?)(?=[_.])// ) {
    $O{$2} = $BS->decode($3);
  }

  return $link,\%O;
</%perl>
</%method> 
