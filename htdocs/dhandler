%# Handle nonhtml-users (less than 4 or more than 10 chars) calls specially
% if ( @path < 4 or @path > 10 ) {
<& "/theme/$P{t}/ico", params => \%P &>
%#
% # Set correct content type for html pages
% $r->content_type('text/html');
%
%# If requested page exists call it with given params; else show error
% } elsif ( -e "${doc_root}/$req_uri" ) {
%# Add header
<& html/header.html &>
%
<body>
<& "/html/$req_uri", params => \%P &>
</body>
</html>
% } else {
<& "/html/error.html" &>
% }
<%init>
  use Spoejs::Lang;
  use Spoejs::Resource;
  use Spoejs::StoryList;
  my $req_uri = $ENV{REQUEST_URI};

  my $path;
  $req_uri =~ s/\/(\w+)\/// and $path = $1;
  my @path = split //, $path;
 
  # Add user-path to session
  $session{user} = $path;

  my $doc_root =  "$ENV{DOCUMENT_ROOT}html";

  # Extract URL encoded parameters
  my %P;
  while( $req_uri =~ s/_(\w)(\w*?)(?=[_\.])// ) {
    $P{$1} = $2;
  };

  # Default to configured, then 'default' theme if none is given in URL
  $P{t} ||= #$channelconf->get(theme) || 
            'default';

  # Language
  # Does language extraction belong here?
  #
  unless( $session{browser_langs} ) {
    my @lang = split /,/, $ENV{HTTP_ACCEPT_LANGUAGE};    
    $_ = substr( $_, 0, 2 ) for( @lang ); # Remove dialekt and quality
    my %seen = ();
    @lang = grep { ! $seen{$_} ++ } @lang; # Uniqify
    # Set langs in session
    $session{browser_langs} = [@lang];
  }
  # Set prefered language
  unless ( $session{pref_lang} ) {
    $session{pref_lang} = $session{browser_langs}[0];
  }
  # Set language object
  unless ( $session{lang_handle} ) {
    $session{lang_handle} = new Spoejs::Lang( lang_order => 
    [ $session{pref_lang},
      @{$session{browser_langs}}]
					    );
  }
  # Set resource object
  unless ( $session{res_handle} ) {
    $session{res_handle} = new Spoejs::Resource( lang => $session{lang_handle} );
  }
</%init>
